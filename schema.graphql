type ThirdParty @entity {
  id: ID!
  managers: [String!]!
  rawMetadata: String!
  resolver: String!
  isApproved: Boolean
  maxItems: BigInt!
  metadata: Metadata!
  root: String!
  consumedSlots: BigInt!

  # Searcheable fields
  searchName: String
  searchDescription: String
  searchText: String
}

type Curation @entity {
  id: ID!
  qty: BigInt!
  receipts: [Receipt!] @derivedFrom(field: "curation")
}

type Receipt @entity {
  id: ID!
  thirdParty: ThirdParty!
  curation: Curation!
  qty: BigInt!
  signer: String!
  createdAt: BigInt!
}

type Metadata @entity {
  id: ID!
  type: MetadataType!
  thirdParty: ThirdPartyMetadata
}

enum MetadataType @entity {
  undefined
  third_party_v1
}

type ThirdPartyMetadata @entity {
  id: ID!
  name: String!
  description: String!
}

# thegraph doesn't support count operations, but we need them to paginate results
# This entity is a workaround to this issue, but it's still not enough, as we'd need counts for more complex queries
type Count @entity {
  id: ID!
  thirdPartyTotal: BigInt!
  receiptTotal: BigInt!
  curationTotal: BigInt!
}
